{"version":3,"sources":["components/Status.jsx","components/View.jsx","Programmer.js","components/Actions.jsx","App.js","reportWebVitals.js","index.js"],"names":["Status","status","className","role","style","width","energy","fullness","happiness","class","money","meals","level","workHours","View","height","src","image","alt","message","Programmer","this","Actions","setStatus","useState","gameStatus","setGameStatus","mealAmount","setMealAmount","getRandomRange","min","max","Math","ceil","floor","random","checkStatus","data-tip","type","onClick","num","feed","play","amount","parseInt","value","onChange","e","target","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6fff0845.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Status ({status}) {\r\n  return (\r\n    <>\r\n      <div className=\"row justify-content-center border-bottom pt-0 pb-3\">\r\n        <div className=\"col-3\">\r\n          <label>Energy:</label>\r\n          <div className=\"progress border\">\r\n            <div className=\"progress-bar progress-bar-striped bg-info progress-bar-animated\" role=\"progressbar\" style={{width: `${status.energy}%` }}>{status.energy}%</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-3\">\r\n          <label>Fullness:</label>\r\n          <div className=\"progress border\">\r\n            <div className=\"progress-bar progress-bar-striped bg-danger progress-bar-animated\" role=\"progressbar\" style={{width: `${status.fullness}%` }}>{status.fullness}%</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-3\">\r\n          <label>Happiness:</label>\r\n          <div className=\"progress border\">\r\n            <div className=\"progress-bar progress-bar-striped bg-success progress-bar-animated\" role=\"progressbar\" style={{width: `${status.happiness}%` } } >{status.happiness}%</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"d-flex justify-content-around pt-2\">\r\n          <div>Money: <i class=\"far fa-money-bill-alt\"></i> x{status.money}</div>\r\n          <div>Meals: <i class=\"fas fa-hamburger\"></i> x{status.meals}</div>\r\n          <div>Level: <i class=\"fab fa-react\"></i> {status.level}</div>\r\n          <div>Working Hours: <i class=\"far fa-clock\"></i> {status.workHours}</div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Status;","import React from 'react'\r\n\r\nfunction View({status}) {\r\n    return (\r\n        <div className=\"col text-center\">\r\n            <img style={{height: \"300px\", width: \"250px\"}} src={`/${status.image}`} alt=\"img\" />\r\n            <h4 className=\"mt-3\"> {status.message}</h4>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default View;","// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random\n// function getRandomRange(min, max) {\n//     min = Math.ceil(min);\n//     max = Math.floor(max);\n//     return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive \n// }\n\nclass Programmer {\n    constructor() {\n        this.happiness = 20;\n        this.fullness = 20;\n        this.energy = 50;\n        this.meals = 3;\n        this.money = 30;\n        this.level = \"Beginner\";\n        this.workHours = 0;\n        this.message = \"Welcome to Programming world\";\n        this.image = \"img/happy.png\";\n    }\n    // work() {\n    //     this.money += 50;\n    //     this.workHours +=8;\n    //     this.energy -= 5;\n    //     this.happiness -= 5;\n    //     this.fullness -= 5\n    //     this.message = `You worked for 8 hours | Happiness -5, Fullness -5, Energy -5`;\n    //     this.image = \"img/work.png\";\n    //     if (25 <= this.workHours && this.workHours <= 60){\n    //         this.level = \"Intermediate\"\n    //         this.message += `, your level now is ${this.level} congrats!!`\n    //         this.image = \"img/levelup.png\";\n    //     } else if (61 <= this.workHours && this.workHours <= 100){\n    //         this.level = \"Expert\"\n    //         this.message += `, your level now is ${this.level} congrats!!`\n    //         this.image = \"img/levelup.png\";\n    //     }\n    //     return this.checkStatus()\n    // }\n    // feed() {\n    //     if (this.meals == 0){\n    //         this.message = \"You don't have any meals go and buy some\"\n    //         this.image = \"img/no.png\";\n    //     } else {\n    //         let num =  getRandomRange(5, 10); \n    //         this.meals-= 1;\n    //         this.fullness += num\n    //         this.happiness += 5;\n    //         this.energy += 5;\n    //         this.message = `You eat delicious meal | Happiness +5, Fullness +${num}, Energy +5`;\n    //         this.image = \"img/eat.png\";\n    //     }\n    //     return this.checkStatus()\n    // }\n    // play() {\n    //     let num =  getRandomRange(5, 10);\n    //     if (this.money < 20){ \n    //         this.message = \"You don't have enough money\"\n    //         this.image = \"img/no.png\";\n    //     } else {\n    //         this.happiness += num\n    //         this.money -= 20;\n    //         this.energy -= 5;\n    //         this.message = `You played and had fun | Happiness +${num}, Money -20, Energy -5`;\n    //         this.image = \"img/entertainment.png\";\n    //     }\n\n    //     return this.checkStatus()\n    // }\n    // sleep() {\n    //     this.happiness += 5;\n    //     this.fullness -= 5;\n    //     this.energy += 15;\n    //     this.message = `You went to sleep | Energy +15, Happiness +5, Fullness -5`;\n    //     this.image = \"img/sleep.png\";\n    //     return this.checkStatus()\n    // }\n    // buyMeals(amount) {\n    //     if (this.money < 10){\n    //         this.message = \"You don't have enough money\"\n    //         this.image = \"img/no.png\";\n    //     } else {\n    //         this.meals += amount;\n    //         this.money -= amount * 10;\n    //         this.message = `You bought ${amount} meals | Money -${amount * 10}`;\n    //         this.image = \"img/buyfood.png\";\n    //     }\n        \n    //     return this.checkStatus()\n    // }\n    // checkStatus(){\n    //     if( this.energy >= 100 && this.fullness >= 100 && this.happiness >= 100 && this.level == \"Expert\") {\n    //         this.message = \"You wins!\";\n    //         this.image = \"img/win.png\";\n    //     } else if(this.fullness < 0) {\n    //         this.message = \"You are died from hunger!\";\n    //         this.image = \"img/lose.png\";\n    //     } else if(this.happiness < 0) {\n    //         this.message = \"You are died from boredom!\";\n    //         this.image = \"img/lose.png\";\n    //     } else if(this.energy < 0) {\n    //         this.message = \"You are died from tiredness!\";\n    //         this.image = \"img/lose.png\";\n    //     }\n    //     return this;\n    // }\n}\n\nexport default Programmer;","import React, { useState } from 'react';\r\nimport Programmer from '../Programmer';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nfunction Actions({ status, setStatus }) {\r\n  const [gameStatus, setGameStatus] = useState(\"\");\r\n  const [mealAmount, setMealAmount] = useState(1);\r\n\r\n  const getRandomRange = (min, max) => {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive \r\n  }\r\n  const work = () => {\r\n    setStatus({ ...status, money: status.money += 50, workHours: status.workHours += 8, energy: status.energy -= 5, happiness: status.happiness -= 5, fullness: status.fullness -= 5, message: `You worked for 8 hours | Happiness -5, Fullness -5, Energy -5`, image: \"img/work.png\" })\r\n\r\n    if (gameStatus === \"\") {\r\n      if (25 <= status.workHours && status.workHours <= 60 && status.level !== \"Intermediate\") {\r\n        setStatus({ ...status, level: \"Intermediate\", message: `Your level now is Intermediate, Congrats!!`, image: \"img/levelup.png\" })\r\n      } else if (61 <= status.workHours && status.workHours <= 100 && status.level !== \"Expert\") {\r\n        setStatus({ ...status, level: \"Expert\", message: `Your level now is Expert, Congrats!!`, image: \"img/levelup.png\" })\r\n      }\r\n    }\r\n    return checkStatus()\r\n  }\r\n  const feed = () => {\r\n    if (status.meals === 0) {\r\n      setStatus({ ...status, message: \"You don't have any meals go and buy some\", image: \"img/no.png\" })\r\n    } else {\r\n      let num = getRandomRange(5, 10);\r\n      setStatus({ ...status, meals: status.meals -= 1, fullness: status.fullness += num, happiness: status.happiness += 5, energy: status.energy += 5, message: status.message = `You ate a delicious meal | Happiness +5, Fullness +${num}, Energy +5`, image: status.image = \"img/eat.png\" })\r\n    }\r\n    return checkStatus()\r\n  }\r\n  const play = () => {\r\n    let num = getRandomRange(5, 10);\r\n    if (status.money < 20) {\r\n      setStatus({ ...status, message: \"You don't have enough money\", image: \"img/no.png\" })\r\n    } else {\r\n      setStatus({ ...status, money: status.money -= 20, energy: status.energy -= 5, happiness: status.happiness += num, message: `You played and had fun | Happiness +${num}, Money -20, Energy -5`, image: \"img/entertainment.png\" })\r\n    }\r\n\r\n    return checkStatus()\r\n  }\r\n  const sleep = () => {\r\n    setStatus({ ...status, energy: status.energy += 15, happiness: status.happiness += 5, fullness: status.fullness -= 5, message: `You went to sleep | Energy +15, Happiness +5, Fullness -5`, image: \"img/sleep.png\" })\r\n    return checkStatus()\r\n  }\r\n  const buyMeals = (amount) => {\r\n    amount = parseInt(amount);\r\n    if (amount > 0) {\r\n      if (status.money < (amount * 10)) {\r\n        setStatus({ ...status, message: \"You don't have enough money\", image: \"img/no.png\" })\r\n      } else {\r\n        setStatus({ ...status, meals: status.meals += amount, money: status.money -= amount * 10, message: `You bought ${amount} meals | Money -${amount * 10}`, image: \"img/buyfood.png\" })\r\n      }\r\n      setMealAmount(1);\r\n    } else {\r\n      setStatus({ ...status, message: \"The number of meals should be grater than 0\", image: \"img/no.png\" })\r\n    }\r\n\r\n    return checkStatus()\r\n  }\r\n  const checkStatus = () => {\r\n    if (status.energy >= 100 && status.fullness >= 100 && status.happiness >= 100 && status.level === \"Expert\") {\r\n      setStatus({ ...status, message: \"You win!\", image: \"img/win.png\" });\r\n      setGameStatus('Game Over');\r\n    } else if (status.fullness <= 0) {\r\n      setStatus({ ...status, message: \"You died from hunger!\", image: \"img/lose.png\" });\r\n      setGameStatus('Game Over');\r\n    } else if (status.happiness <= 0) {\r\n      setStatus({ ...status, message: \"You died from boredom!\", image: \"img/lose.png\" });\r\n      setGameStatus('Game Over');\r\n    } else if (status.energy <= 0) {\r\n      setStatus({ ...status, message: \"You died from tiredness!\", image: \"img/lose.png\" });\r\n      setGameStatus('Game Over');\r\n    }\r\n    return status;\r\n  }\r\n\r\n  const reset = () => {\r\n    setStatus(new Programmer());\r\n    setGameStatus('');\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {\r\n        gameStatus === '' ?\r\n          <div className=\"row justify-content-center ml-4\">\r\n            <button data-tip='Eat a Meal' type=\"button\" className=\"col-1 btn btn-success ml-3\" onClick={() => feed()} ><i className=\"fas fa-hamburger\"></i></button>\r\n            <ReactTooltip />\r\n            <button data-tip='Go to Sleep' type=\"button\" className=\"col-1 btn btn-primary  ml-3\" onClick={() => sleep()}><i className=\"fas fa-bed\"></i></button>\r\n            <ReactTooltip />\r\n            <button data-tip='Have some Fun' type=\"button\" className=\"col-1 btn btn-danger ml-3\" onClick={() => play()}><i className=\"fas fa-dice\"></i></button>\r\n            <ReactTooltip />\r\n            <button data-tip='Go to Work' type=\"button\" className=\"col-1 btn btn-info ml-3\" onClick={() => work()}><i className=\"fas fa-laptop-code\"></i></button>\r\n            <ReactTooltip />\r\n            <div className=\"d-flex ml-3\">\r\n              <button data-tip='Enter the Number of Meals that you Want to Buy' type=\"button\" className=\"col-4 btn btn-warning\" onClick={() => buyMeals(mealAmount)}><i className=\"fas fa-shopping-basket text-white\"></i></button>\r\n              <ReactTooltip />\r\n              <input type=\"number\" className=\"col-3 border text-center px-0\" value={mealAmount} onChange={(e) => setMealAmount(e.target.value)} />\r\n            </div>\r\n          </div> :\r\n          <div className=\"row justify-content-center \">\r\n            <a data-tip='Reset' type=\"button\" className=\"btn btn-dark px-4\" onClick={() => reset()} ><i className=\"fas fa-undo-alt\"></i></a>\r\n            <ReactTooltip />\r\n          </div>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Actions;","import 'bootstrap/dist/css/bootstrap.min.css'\r\nimport Status from './components/Status.jsx'\r\nimport View from './components/View.jsx'\r\nimport Actions from './components/Actions.jsx'\r\nimport React, { useState } from 'react'\r\nimport Programmer from './Programmer'\r\n\r\nfunction App() {\r\n  const [status, setStatus] = useState(new Programmer());\r\n  \r\n  return (\r\n    <div className=\"container mt-2\">\r\n      <div className=\"card\">\r\n        <div className=\"card-header\">\r\n          <Status status={status} />\r\n        </div>\r\n        <div className=\"card-body mt-2\">\r\n          <View status={status} />\r\n        </div>\r\n        <div className=\"card-footer\">\r\n          <Actions status={status} setStatus={setStatus} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}