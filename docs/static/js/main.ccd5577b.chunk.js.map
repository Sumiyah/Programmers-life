{"version":3,"sources":["components/Status.jsx","components/View.jsx","Programmer.js","components/Actions.jsx","App.js","reportWebVitals.js","index.js"],"names":["Status","status","medalColor","className","role","style","width","energy","fullness","happiness","data-tip","color","money","meals","workHours","View","height","src","image","alt","backgroundColor","display","message","Programmer","this","level","Actions","setStatus","setMedalColor","useState","gameStatus","setGameStatus","mealAmount","setMealAmount","getRandomRange","min","max","Math","ceil","floor","random","checkStatus","type","onClick","num","feed","play","amount","parseInt","value","onChange","e","target","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ccd5577b.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nfunction Status ({status, medalColor}) {\r\n  return (\r\n    <>\r\n      <div className=\"row justify-content-center border-bottom pt-0 pb-3\">\r\n        <div className=\"col-4\">\r\n          <label>Energy:</label>\r\n          <div className=\"progress border\">\r\n            <div className=\"progress-bar progress-bar-striped bg-info progress-bar-animated\" role=\"progressbar\" style={{width: `${status.energy}%` }}>{status.energy}%</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-4\">\r\n          <label>Fullness:</label>\r\n          <div className=\"progress border\">\r\n            <div className=\"progress-bar progress-bar-striped bg-danger progress-bar-animated\" role=\"progressbar\" style={{width: `${status.fullness}%` }}>{status.fullness}%</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-4\">\r\n          <label>Happiness:</label>\r\n          <div className=\"progress border\">\r\n            <div className=\"progress-bar progress-bar-striped bg-success progress-bar-animated\" role=\"progressbar\" style={{width: `${status.happiness}%` } } >{status.happiness}%</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"d-flex justify-content-around pt-2\">\r\n          <div data-tip='Amount of Money'>\r\n            <i className=\"far fa-money-bill-alt mx-1\" style={{color:\"green\"}}></i> \r\n            x{status.money}\r\n          </div>\r\n          <ReactTooltip />\r\n\r\n          <div data-tip='Number of Meals'>\r\n            <i className=\"fas fa-hamburger mx-1\" style={{color:\"#EDAC2F\"}}></i> \r\n            x{status.meals}\r\n          </div>\r\n          <ReactTooltip />\r\n          \r\n          <div data-tip='Proogramming Level'>\r\n            <i className=\"fab fa-react mx-1\" style={{color:\"#29B6F6\"}}></i>LvL:\r\n            <span style={{color: medalColor}}><i className=\"fas fa-medal mx-1\"></i></span>\r\n          </div>\r\n          <ReactTooltip />\r\n\r\n          <div data-tip='Working Hours'>\r\n            <i className=\"far fa-clock mx-1\"></i> \r\n            {status.workHours} hr\r\n          </div>\r\n          <ReactTooltip />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Status;","import React from 'react'\r\n\r\nfunction View({status}) {\r\n    return (\r\n        <>\r\n        <div className=\"col text-center\">\r\n            <img style={{height: \"300px\", width: \"250px\"}} src={status.image} alt=\"img\" />\r\n        </div>\r\n        <div className=\"col text-center\">\r\n        <h5 className=\"mt-3 border rounded text-center p-2\" style={{backgroundColor: \"#E5E5E5\", 'white-space': 'pre-wrap', display: 'inline-block'}}> {status.message}</h5>\r\n        </div>\r\n        \r\n        </>\r\n    );\r\n}\r\n\r\nexport default View;","// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random\n// function getRandomRange(min, max) {\n//     min = Math.ceil(min);\n//     max = Math.floor(max);\n//     return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive \n// }\n\nclass Programmer {\n    constructor() {\n        this.happiness = 20;\n        this.fullness = 20;\n        this.energy = 50;\n        this.meals = 3;\n        this.money = 30;\n        this.level = \"Beginner\";\n        this.workHours = 0;\n        this.message = \"Welcome to Programming world\";\n        this.image = \"img/happy.png\";\n    }\n    // work() {\n    //     this.money += 50;\n    //     this.workHours +=8;\n    //     this.energy -= 5;\n    //     this.happiness -= 5;\n    //     this.fullness -= 5\n    //     this.message = `You worked for 8 hours | Happiness -5, Fullness -5, Energy -5`;\n    //     this.image = \"img/work.png\";\n    //     if (25 <= this.workHours && this.workHours <= 60){\n    //         this.level = \"Intermediate\"\n    //         this.message += `, your level now is ${this.level} congrats!!`\n    //         this.image = \"img/levelup.png\";\n    //     } else if (61 <= this.workHours && this.workHours <= 100){\n    //         this.level = \"Expert\"\n    //         this.message += `, your level now is ${this.level} congrats!!`\n    //         this.image = \"img/levelup.png\";\n    //     }\n    //     return this.checkStatus()\n    // }\n    // feed() {\n    //     if (this.meals == 0){\n    //         this.message = \"You don't have any meals go and buy some\"\n    //         this.image = \"img/no.png\";\n    //     } else {\n    //         let num =  getRandomRange(5, 10); \n    //         this.meals-= 1;\n    //         this.fullness += num\n    //         this.happiness += 5;\n    //         this.energy += 5;\n    //         this.message = `You eat delicious meal | Happiness +5, Fullness +${num}, Energy +5`;\n    //         this.image = \"img/eat.png\";\n    //     }\n    //     return this.checkStatus()\n    // }\n    // play() {\n    //     let num =  getRandomRange(5, 10);\n    //     if (this.money < 20){ \n    //         this.message = \"You don't have enough money\"\n    //         this.image = \"img/no.png\";\n    //     } else {\n    //         this.happiness += num\n    //         this.money -= 20;\n    //         this.energy -= 5;\n    //         this.message = `You played and had fun | Happiness +${num}, Money -20, Energy -5`;\n    //         this.image = \"img/entertainment.png\";\n    //     }\n\n    //     return this.checkStatus()\n    // }\n    // sleep() {\n    //     this.happiness += 5;\n    //     this.fullness -= 5;\n    //     this.energy += 15;\n    //     this.message = `You went to sleep | Energy +15, Happiness +5, Fullness -5`;\n    //     this.image = \"img/sleep.png\";\n    //     return this.checkStatus()\n    // }\n    // buyMeals(amount) {\n    //     if (this.money < 10){\n    //         this.message = \"You don't have enough money\"\n    //         this.image = \"img/no.png\";\n    //     } else {\n    //         this.meals += amount;\n    //         this.money -= amount * 10;\n    //         this.message = `You bought ${amount} meals | Money -${amount * 10}`;\n    //         this.image = \"img/buyfood.png\";\n    //     }\n        \n    //     return this.checkStatus()\n    // }\n    // checkStatus(){\n    //     if( this.energy >= 100 && this.fullness >= 100 && this.happiness >= 100 && this.level == \"Expert\") {\n    //         this.message = \"You wins!\";\n    //         this.image = \"img/win.png\";\n    //     } else if(this.fullness < 0) {\n    //         this.message = \"You are died from hunger!\";\n    //         this.image = \"img/lose.png\";\n    //     } else if(this.happiness < 0) {\n    //         this.message = \"You are died from boredom!\";\n    //         this.image = \"img/lose.png\";\n    //     } else if(this.energy < 0) {\n    //         this.message = \"You are died from tiredness!\";\n    //         this.image = \"img/lose.png\";\n    //     }\n    //     return this;\n    // }\n}\n\nexport default Programmer;","import React, { useState } from 'react';\r\nimport Programmer from '../Programmer';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nfunction Actions({ status, setStatus, setMedalColor }) {\r\n  const [gameStatus, setGameStatus] = useState(\"\");\r\n  const [mealAmount, setMealAmount] = useState(1);\r\n  \r\n  const getRandomRange = (min, max) => {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive \r\n  }\r\n  const work = () => {\r\n    setStatus({ ...status, money: status.money += 50, workHours: status.workHours += 8, energy: status.energy -= 5, happiness: status.happiness -= 5, fullness: status.fullness -= 5, message: `You worked for 8 hours\\nHappiness -5, Fullness -5, Energy -5`, image: \"img/work.png\" })\r\n\r\n    if (gameStatus === \"\") {\r\n      if (25 <= status.workHours && status.workHours <= 60 && status.level !== \"Intermediate\") {\r\n        setStatus({ ...status, level: \"Intermediate\", message: `Your level now is Intermediate, Congrats!!`, image: \"img/levelup.png\" })\r\n        setMedalColor(\"#B4B4B4\");\r\n      } else if (61 <= status.workHours && status.workHours <= 100 && status.level !== \"Expert\") {\r\n        setStatus({ ...status, level: \"Expert\", message: `Your level now is Expert, Congrats!!`, image: \"img/levelup.png\" })\r\n        setMedalColor('#C9B037');\r\n      }\r\n    }\r\n    return checkStatus()\r\n  }\r\n  const feed = () => {\r\n    if (status.meals === 0) {\r\n      setStatus({ ...status, message: \"You don't have any meals go and buy some\", image: \"img/no.png\" })\r\n    } else {\r\n      let num = getRandomRange(5, 10);\r\n      setStatus({ ...status, meals: status.meals -= 1, fullness: status.fullness += num, happiness: status.happiness += 5, energy: status.energy += 5, message: status.message = `You ate a delicious meal\\nHappiness +5, Fullness +${num}, Energy +5`, image: status.image = \"img/eat.png\" })\r\n    }\r\n    return checkStatus()\r\n  }\r\n  const play = () => {\r\n    let num = getRandomRange(5, 10);\r\n    if (status.money < 20) {\r\n      setStatus({ ...status, message: \"You don't have enough money\", image: \"img/no.png\" })\r\n    } else {\r\n      setStatus({ ...status, money: status.money -= 20, energy: status.energy -= 5, happiness: status.happiness += num, message: `You played and had fun\\nHappiness +${num}, Money -20, Energy -5`, image: \"img/entertainment.png\" })\r\n    }\r\n\r\n    return checkStatus()\r\n  }\r\n  const sleep = () => {\r\n    setStatus({ ...status, energy: status.energy += 15, happiness: status.happiness += 5, fullness: status.fullness -= 5, message: `You went to sleep\\nEnergy +15, Happiness +5, Fullness -5`, image: \"img/sleep.png\" })\r\n    return checkStatus()\r\n  }\r\n  const buyMeals = (amount) => {\r\n    amount = parseInt(amount);\r\n    if (amount > 0) {\r\n      if (status.money < (amount * 10)) {\r\n        setStatus({ ...status, message: \"You don't have enough money\", image: \"img/no.png\" })\r\n      } else {\r\n        setStatus({ ...status, meals: status.meals += amount, money: status.money -= amount * 10, message: `You bought ${amount} meals\\nMoney -${amount * 10}`, image: \"img/buyfood.png\" })\r\n      }\r\n      setMealAmount(1);\r\n    } else {\r\n      setStatus({ ...status, message: \"The number of meals should be grater than 0\", image: \"img/no.png\" })\r\n    }\r\n\r\n    return checkStatus()\r\n  }\r\n  const checkStatus = () => {\r\n    if (status.energy >= 100 && status.fullness >= 100 && status.happiness >= 100 && status.level === \"Expert\") {\r\n      setStatus({ ...status, message: \"You win!\", image: \"img/win.png\" });\r\n      setGameStatus('Game Over');\r\n    } else if (status.fullness <= 0) {\r\n      setStatus({ ...status, message: \"You died from hunger!\", image: \"img/lose.png\" });\r\n      setGameStatus('Game Over');\r\n    } else if (status.happiness <= 0) {\r\n      setStatus({ ...status, message: \"You died from boredom!\", image: \"img/lose.png\" });\r\n      setGameStatus('Game Over');\r\n    } else if (status.energy <= 0) {\r\n      setStatus({ ...status, message: \"You died from tiredness!\", image: \"img/lose.png\" });\r\n      setGameStatus('Game Over');\r\n    }\r\n    return status;\r\n  }\r\n\r\n  const reset = () => {\r\n    setStatus(new Programmer());\r\n    setGameStatus('');\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {\r\n        gameStatus === '' ?\r\n          <div className=\"row \">\r\n            \r\n            <div className=\"col \">\r\n              <div className=\"row justify-content-center\">\r\n\r\n            <button data-tip='Eat a Meal' type=\"button\" className=\" btn btn-success \" onClick={() => feed()} ><i className=\"fas fa-hamburger\"></i></button>\r\n            <ReactTooltip />\r\n            <button data-tip='Go to Sleep' type=\"button\" className=\" btn btn-primary  ml-1\" onClick={() => sleep()}><i className=\"fas fa-bed\"></i></button>\r\n            <ReactTooltip />\r\n            <button data-tip='Have some Fun' type=\"button\" className=\" btn btn-danger ml-1\" onClick={() => play()}><i className=\"fas fa-dice\"></i></button>\r\n            <ReactTooltip />\r\n            <button data-tip='Go to Work' type=\"button\" className=\"btn btn-info ml-1\" onClick={() => work()}><i className=\"fas fa-laptop-code\"></i></button>\r\n            <ReactTooltip />\r\n            \r\n              <button data-tip='Enter the Number of Meals that you Want to Buy' type=\"button\" className=\" ml-1 btn btn-warning\" onClick={() => buyMeals(mealAmount)}><i className=\"fas fa-shopping-basket text-white\"></i></button>\r\n              <ReactTooltip />\r\n              <input type=\"number\" className=\"col-2 border text-center px-0\" value={mealAmount} onChange={(e) => setMealAmount(e.target.value)} />\r\n            \r\n              </div>\r\n            </div>\r\n            \r\n          </div> :\r\n          <div className=\"row justify-content-center \">\r\n            <a data-tip='Reset' type=\"button\" className=\"btn btn-dark px-4\" onClick={() => reset()} ><i className=\"fas fa-undo-alt\"></i></a>\r\n            <ReactTooltip />\r\n          </div>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Actions;","import 'bootstrap/dist/css/bootstrap.min.css'\r\nimport Status from './components/Status.jsx'\r\nimport View from './components/View.jsx'\r\nimport Actions from './components/Actions.jsx'\r\nimport React, { useState } from 'react'\r\nimport Programmer from './Programmer'\r\n\r\nfunction App() {\r\n  const [status, setStatus] = useState(new Programmer());\r\n  const [medalColor, setMedalColor] = useState('#b08d57');\r\n  \r\n  return (\r\n    <div className=\"container mt-3\">\r\n      <div className=\"card\">\r\n        <div className=\"card-header\">\r\n          <Status status={status} medalColor={medalColor} />\r\n        </div>\r\n        <div className=\"card-body mt-2\">\r\n          <View status={status} />\r\n        </div>\r\n        <div className=\"card-footer\">\r\n          <Actions status={status} setStatus={setStatus} setMedalColor={setMedalColor} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}